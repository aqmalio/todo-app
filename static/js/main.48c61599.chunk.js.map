{"version":3,"sources":["Redux/todoSlice.js","Components/AddTodo.js","Redux/modalDetailSlice.js","Components/TodoDetail.js","Components/TodoStack.js","Components/TodoList.js","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["getTodosFromApi","createAsyncThunk","a","fetch","res","ok","json","todos","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","push","id","Date","now","title","payload","description","status","createdAt","moment","format","updateTodo","index","findIndex","todo","parseInt","deleteTodo","filter","toggleStatus","extraReducers","fulfilled","actions","AddTodo","useState","setTitle","setDescription","dispatch","useDispatch","className","htmlFor","type","value","onChange","event","target","placeholder","onClick","length","modalDetailSlice","openModal","changeDetail","TodoDetail","todoDetail","useSelector","detail","cancelButtonRef","useRef","updatedTitle","setUpdateTitle","updatedDescription","setUpdateDescription","updatedStatus","setUpdateStatus","useEffect","setOpen","val","Root","show","as","Fragment","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","ref","checked","defaultChecked","TodoStack","props","TodoList","sort","b","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.48c61599.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\n\r\nexport const getTodosFromApi = createAsyncThunk('todos/api',\r\n  async () => {\r\n    const res = await fetch('https://virtserver.swaggerhub.com/hanabyan/todo/1.0.0/to-do-list')\r\n    if (res.ok) {\r\n      const todos = await res.json()\r\n      return todos\r\n    }\r\n  }\r\n)\r\n\r\nconst todoSlice = createSlice({\r\n  name: 'todos',\r\n  initialState: [],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push({\r\n        id: Date.now(),\r\n        title: action.payload.title,\r\n        description: action.payload.description,\r\n        status: 0,\r\n        createdAt: moment().format('YYYY-MM-DD HH:mm')\r\n      })\r\n    },\r\n    updateTodo: (state, action) => {\r\n      const index = state.findIndex((todo) => todo.id === parseInt(action.payload.id))\r\n      state[index].title = action.payload.title\r\n      state[index].description = action.payload.description\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return state.filter(todo => todo.id !== parseInt(action.payload.id));\r\n    },\r\n    toggleStatus: (state, action) => {\r\n      const index = state.findIndex((todo) => todo.id === parseInt(action.payload.id))\r\n      state[index].status = action.payload.status\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getTodosFromApi.fulfilled]: (state, action) => {\r\n      return action.payload \r\n    }\r\n  }\r\n})\r\n\r\nexport const { addTodo, toggleStatus, updateTodo, deleteTodo } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;","import React, { useState } from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../Redux/todoSlice\";\r\n\r\n\r\nexport const AddTodo = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const onSubmit = () => {\r\n    if (title.length > 0) {\r\n      dispatch(addTodo({\r\n        title: title,\r\n        description: description\r\n      }))\r\n      setTitle('')\r\n      setDescription('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-6 flex flex-col sm:flex-row space-x-2\">\r\n      <div className=\"w-full relative border border-gray-300 rounded-md px-3 py-2 shadow-sm focus-within:ring-1 focus-within:ring-indigo-600 focus-within:border-indigo-600\">\r\n        <label htmlFor=\"title\" className=\"absolute -top-2 left-2 -mt-px inline-block px-1 bg-white text-xs font-medium text-gray-900\">Something todo</label>\r\n        <input type=\"text\" name=\"title\" value={title} onChange={(event) => setTitle(event.target.value)} id=\"title\" className=\"block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm\" placeholder=\"Title\" />  \r\n      </div>\r\n      <div className=\"w-full relative border border-gray-300 rounded-md px-3 py-2 shadow-sm focus-within:ring-1 focus-within:ring-indigo-600 focus-within:border-indigo-600\">\r\n        <label htmlFor=\"description\" className=\"absolute -top-2 left-2 -mt-px inline-block px-1 bg-white text-xs font-medium text-gray-900\">What It's About?</label>\r\n        <input type=\"text\" name=\"description\" value={description} onChange={(event) => setDescription(event.target.value)} id=\"description\" className=\"block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm\" placeholder=\"Description\" />  \r\n      </div>\r\n      <button onClick={onSubmit} type=\"button\" className=\"flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n          Add!\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst modalDetailSlice = createSlice({\r\n  name: 'detail',\r\n  initialState: {\r\n    id: null,\r\n    title: null,\r\n    description: null,\r\n    status: null,\r\n    createdAt: null,\r\n    openModal: false\r\n},\r\n  reducers: {\r\n    changeDetail: (state, action) => {\r\n      return {\r\n        id: action.payload.id,\r\n        title: action.payload.title,\r\n        description: action.payload.description,\r\n        status: action.payload.status,\r\n        createdAt: action.payload.createdAt,\r\n        openModal: action.payload.openModal\r\n      }\r\n    },\r\n  }\r\n})\r\n\r\nexport const { changeDetail } = modalDetailSlice.actions;\r\n\r\nexport default modalDetailSlice.reducer;","import { Fragment, useRef, useState,useEffect } from 'react'\r\nimport { Dialog, Transition } from '@headlessui/react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeDetail } from \"../Redux/modalDetailSlice\";\r\nimport { toggleStatus, updateTodo, deleteTodo } from '../Redux/todoSlice'\r\n\r\n\r\nexport const TodoDetail = () => {\r\n  const todoDetail = useSelector((state) => state.detail)\r\n  const cancelButtonRef = useRef(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const [updatedTitle, setUpdateTitle] = useState('')\r\n  const [updatedDescription, setUpdateDescription] = useState('')\r\n  const [updatedStatus, setUpdateStatus] = useState()\r\n\r\n  useEffect(() => {\r\n    setUpdateTitle(todoDetail.title)\r\n    setUpdateDescription(todoDetail.description)\r\n    setUpdateStatus(todoDetail.status)\r\n  }, [todoDetail])\r\n\r\n  const setOpen = (val) => {\r\n    dispatch(changeDetail({ ...todoDetail, openModal: val }))\r\n  }\r\n\r\n  const changeStatus = (event) => {\r\n    setUpdateStatus(event.target.checked ? 1 : 0)\r\n    dispatch(toggleStatus({\r\n      id: event.target.id,\r\n      status: event.target.checked ? 1 : 0\r\n    }))\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    dispatch(updateTodo({\r\n      id: todoDetail.id,\r\n      title: updatedTitle,\r\n      description: updatedDescription\r\n    }))\r\n    setOpen(false)\r\n  }\r\n\r\n  const onDelete = () => {\r\n    dispatch(deleteTodo({\r\n      id: todoDetail.id\r\n    }))\r\n    setOpen(false)\r\n  }\r\n  \r\n  return (\r\n    <Transition.Root show={todoDetail.openModal} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" initialFocus={cancelButtonRef} onClose={setOpen}>\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  <div className=\"mt-3 w-full text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                    <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                      Todo: {todoDetail.title} \r\n                    </Dialog.Title>\r\n                    <div className=\"mt-2\">\r\n                      <div className=\"my-6 flex flex-col sm:flex-col space-y-6\">\r\n                        <div className=\"w-full relative border border-gray-300 rounded-md px-3 py-2 shadow-sm focus-within:ring-1 focus-within:ring-indigo-600 focus-within:border-indigo-600\">\r\n                          <label htmlFor=\"title\" className=\"absolute -top-2 left-2 -mt-px inline-block px-1 bg-white text-xs font-medium text-gray-900\">Change Title</label>\r\n                          <input type=\"text\" name=\"title\" value={updatedTitle} onChange={(event) => setUpdateTitle(event.target.value)} id=\"title\" className=\"block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm\" placeholder=\"Title\" />  \r\n                        </div>\r\n                        <div className=\"w-full relative border border-gray-300 rounded-md px-3 py-2 shadow-sm focus-within:ring-1 focus-within:ring-indigo-600 focus-within:border-indigo-600\">\r\n                          <label htmlFor=\"description\" className=\"absolute -top-2 left-2 -mt-px inline-block px-1 bg-white text-xs font-medium text-gray-900\">Change Description</label>\r\n                          <input type=\"text\" name=\"description\" value={updatedDescription} onChange={(event) => setUpdateDescription(event.target.value)} id=\"description\" className=\"block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm\" placeholder=\"Description\" />  \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse items-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={onUpdate}\r\n                >\r\n                  Update\r\n                </button>\r\n                {!updatedStatus && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={onDelete}\r\n                >\r\n                  Delete\r\n                </button>\r\n                )}\r\n                \r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={() => setOpen(false)}\r\n                  ref={cancelButtonRef}\r\n                >\r\n                  Close\r\n                </button>\r\n                <div className=\"ml-3 w-full items-stretch flex flex-col h-5\">\r\n                  <input onChange={changeStatus} defaultChecked={todoDetail.status} id={todoDetail.id} aria-describedby=\"comments-description\" name=\"status\" type=\"checkbox\" className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleStatus } from '../Redux/todoSlice'\r\nimport { changeDetail } from \"../Redux/modalDetailSlice\";\r\n\r\nexport const TodoStack = (props) => {\r\n  const todo = props.todo\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const changeStatus = (event) => {\r\n    dispatch(toggleStatus({\r\n      id: event.target.id,\r\n      status: event.target.checked ? 1 : 0\r\n    }))\r\n  }\r\n\r\n  const openDetail = () => {\r\n    dispatch(changeDetail({ ...todo, openModal:true }))\r\n  }\r\n  \r\n  return (\r\n    <li className=\"bg-white py-5 px-4 hover:bg-gray-50 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n      <div className=\"divide-y divide-gray-200\">\r\n        <div className=\"relative flex items-start py-4\">\r\n          <div className=\"cursor-pointer min-w-0 flex-1 text-sm\" onClick={openDetail}>\r\n            <label htmlFor=\"comments\" className=\"font-medium text-gray-700 cursor-pointer hover:underline\">{todo.title}</label>\r\n                <p id=\"comments-description\" className=\"text-gray-500\">{todo.description}</p>\r\n          </div>\r\n          <div className=\"ml-3 flex flex-col items-end h-5\">\r\n            <input onChange={changeStatus} defaultChecked={todo.status} id={todo.id} aria-describedby=\"comments-description\" name=\"status\" type=\"checkbox\" className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\" />\r\n                <p id=\"comments-description\" className=\"text-gray-500 text-sm\">{todo.createdAt}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { TodoStack } from './TodoStack'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getTodosFromApi } from \"../Redux/todoSlice\";\r\n\r\nexport const TodoList = () => {\r\n  const todos = useSelector((state) => state.todos)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodosFromApi())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=\"w-full flex space-x-4\">\r\n      {/* Todo status 0 (belum selesai)*/}\r\n      <ul className=\"shadow-lg bg-red-100 rounded p-2 w-1/2 divide-y divide-gray-200\">\r\n      <h3 className=\"py-2 text-lg leading-6 font-medium text-gray-900\">Todo</h3>\r\n        {todos.filter((todo) => todo.status === 0).sort((a, b) => (a.createdAt > b.createdAt) ? 1 : -1).map((todo) => (\r\n          <TodoStack key={todo.id} todo={todo}/>\r\n        ))}  \r\n      </ul>\r\n      {/* Todo status 1 (selesai)*/}\r\n      <ul className=\"shadow-lg bg-green-100 rounded p-2 w-1/2 divide-y divide-gray-200\">\r\n      <h3 className=\"py-2 text-lg leading-6 font-medium text-gray-900\">Completed</h3>\r\n        {todos.filter((todo) => todo.status === 1).sort((a, b) => (a.createdAt < b.createdAt) ? 1 : -1).map((todo) => (\r\n          <TodoStack key={todo.id} todo={todo}/>\r\n        ))}  \r\n      </ul>\r\n    </div>\r\n  )\r\n}","import { AddTodo } from \"./Components/AddTodo\";\r\nimport { TodoDetail } from \"./Components/TodoDetail\";\r\nimport { TodoList } from \"./Components/TodoList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n      <AddTodo />\r\n      <TodoList />\r\n      <TodoDetail />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport modalDetailSlice from './modalDetailSlice'\r\nimport todoReducer from './todoSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    todos: todoReducer,\r\n    detail: modalDetailSlice\r\n  }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './Redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}